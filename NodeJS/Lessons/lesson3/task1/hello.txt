Создайте текстовый файл `input.txt` и добавьте в него большой объем текста или повторяющуюся строку, например: "Node.js потоки\n". Повторите эту строку несколько сотен раз.

Напишите скрипт, который будет создавать читающий поток для файла `input.txt` с использованием метода `fs.createReadStream`.

Обработайте событие `data`, чтобы выводить куски данных на консоль по мере их чтения.

Обработайте событие `end`, чтобы вывести сообщение, когда чтение файла завершено.

Запустите ваш скрипт и убедитесь, что данные из файла `input.txt` читаются и выводятся на консоль частями.

////////////////////////////////////////////////////////////////////////////////

Создайте текстовый файл `input.txt` и добавьте в него большой объем текста или повторяющуюся строку, например: "Копирование файлов с использованием потоков\n". Повторите эту строку несколько сотен раз.

Напишите скрипт, который будет создавать читающий поток для файла `input.txt` с использованием метода `fs.createReadStream`.

Создайте записывающий поток для нового файла `output.txt` с использованием метода `fs.createWriteStream`.

Объедините читающий и записывающий потоки с помощью метода `pipe`.

Обработайте событие `finish` для записывающего потока, чтобы вывести сообщение о завершении копирования.

Обработайте события `error` для обоих потоков для обработки возможных ошибок при чтении и записи.

Запустите ваш скрипт и убедитесь, что содержимое файла `input.txt` было успешно скопировано в `output.txt`.


/*
import fs from 'fs';
const readStream = fs.createReadStream('input.txt', {encoding: 'utf-8', highWaterMark: 64})
readStream.on('data', (chunk) => {
    console.log('Chunk:\n', chunk);
})
readStream.on('end', () => {
    console.log('End of reading file');
})
readStream.on('error', () => {
    console.log('Error while reading file');
})
*/